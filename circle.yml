general:
  branches:
    only:
      - master
      - /environment\/.*/

machine:
  timezone: Asia/Tokyo
  environment:
    PATH: $HOME/.local/bin:$PATH
    AWS_DEFAULT_REGION: ap-northeast-1 
    TERRAFORM_VERSION: 0.9.1

dependencies:
  override:
    - |
      sudo pip install awscli
      if [[ ! -f ~/.local/bin/terraform ]]; then
        mkdir -p ~/.local/bin
        (
          cd ~/.local/bin
          wget "https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip"
          unzip *.zip
          rm *.zip
        )
      fi
  cache_directories:
    - ~/.local/bin

test:
  pre:
    - echo "--- test start ---"
  override:
    - |
      echo "[TEST] AWS CLI is installed."
      which aws
    - |
      echo "[TEST] Terraform is installed."
      which terraform
    - |
      if [[ "${CIRCLE_BRANCH}" = "master" || "${CIRCLE_BRANCH}" = "environment/staging" ]]; then
        export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID_STG}
        export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY_STG}
        TF_BUCKET_NAME="kirino-minato-aws02-terraform"
        cd terraform/environment/staging
      elif [[ "${CIRCLE_BRANCH}" = "environment/production" ]]; then
        export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID_PRD}
        export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY_PRD}
        TF_BUCKET_NAME="kirino-minato-aws03-terraform"
        cd terraform/environment/production
      fi
      echo terraform remote config -backend=s3 -backend-config="bucket=${TF_BUCKET_NAME}" -backend-config='key=tfstate/terraform.tfstate'
      echo terraform get -update
      echo terraform plan
  post:
    - echo "--- test finished ---"

deployment:
  master:
    branch: master
    commands:
      - uname -a
  production:
    branch: environment/production
    commands:
      - |
        cd terraform/${CIRCLE_BRANCH}
        terraform get -update
        terraform apply
        terraform remote push
  staging:
    branch: environment/staging
    commands:
      - |
        cd terraform/${CIRCLE_BRANCH}
        terraform get -update
        terraform apply
        terraform remote push
